(function() {
  var Utils, debug;

  debug = require('debug')('wfa:utils');

  Utils = {
    readStream: function(stream, shouldParse, cb) {
      var data;
      data = "";
      stream.on('data', function(chunk) {
        return data += chunk;
      });
      stream.on('end', function() {
        var error;
        if (shouldParse) {
          try {
            data = JSON.parse(data);
          } catch (_error) {
            error = _error;
            cb(error, null);
          }
        }
        return cb(null, data);
      });
      return stream.on('error', function(e) {
        return cb(e);
      });
    },
    sendSuccessToStreamAsJSON: function(stream, response) {
      response = JSON.stringify(response);
      stream.writeHead(200, {
        'Content-Length': Buffer.byteLength(response),
        'Content-Type': 'application/json'
      });
      return stream.end(response);
    },
    sendErrorToStreamAsJSON: function(stream, error) {
      error = JSON.stringify(error);
      stream.writeHead(501, {
        'Content-Length': Buffer.byteLength(error),
        'Content-Type': 'application/json'
      });
      stream.end(error);
      return debug("Sent error " + error + " to stream");
    }
  };

  module.exports = Utils;

}).call(this);
